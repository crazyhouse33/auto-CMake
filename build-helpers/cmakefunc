#My cmake basic functions to do cool stuff

# List subdir
MACRO(SUBDIRLIST result curdir)
  FILE(GLOB_RECURSE children CONFIGURE_DEPENDS LIST_DIRECTORIES true ${curdir}/* )

  SET(dirlist "")
  FOREACH(child ${children})
    IF(IS_DIRECTORY ${child})
      LIST(APPEND dirlist ${child})
    ENDIF()
  ENDFOREACH()

  SET(${result} ${dirlist})
ENDMACRO()

#List subdir and dir
MACRO(DIR_AND_SUBDIRS_LIST result curdir)
SUBDIRLIST( SUBS curdir)
set(${result} ${curdir}) 
LIST(APPEND ${result} {$SUBS})
ENDMACRO()




# Append/return non hidden subdirectories and dir to out
FUNCTION(get_non_hidden_subdirectories directory out)
SUBDIRLIST(subdirs ${directory})
list (APPEND ${out} ${directory})
get_filename_component(absdirectory ${directory} REALPATH )
FOREACH(sub ${subdirs})
	string(REPLACE ${absdirectory} "" relative ${sub}) #Here lie the trick to not include .git and other bullshit
	IF (NOT ${relative} MATCHES ".*/\\..*")
		message ("\tAdding ${sub} as include dir.") 
		list (APPEND ${out} ${relative})
	ENDIF()
ENDFOREACH()
#We always append directory even if is hidden
ENDFUNCTION(get_non_hidden_subdirectories)

# Take a dictionary, add the shubdirs that are not hidden (.git and other traps) and add them to include dir
function(include_subdirectories directory)
# We always add directory
message("\nAdding subdirs of ${directory} as include directory:\n")
get_non_hidden_subdirectories(directory, subdirs)
FOREACH(sub ${subdirs})

	message ("\tAdding ${sub} as include dir.") 
	include_directories(${sub})

ENDFOREACH()
ENDFUNCTION(include_subdirectories)


#Join a list with GLUE
MACRO(JOIN VALUES GLUE OUTPUT)
  string (REPLACE ";" "${GLUE}" _TMP_STR "${VALUES}")
  set (${OUTPUT} "${_TMP_STR}")
ENDMACRO()


MACRO(get_C_sources directory out)
file(GLOB_RECURSE ${out} CONFIGURE_DEPENDS ${directory}/*.h ${directory}/*.c)
ENDMACRO(get_C_sources)

FUNCTION(set_if_not_set var value)
	if (NOT DEFINED var)
		set(var value)
	endif()	
ENDFUNCTION(set_if_not_set)
